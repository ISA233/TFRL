from chess.chess import ChessBoard
from vnet import Network
from player import Player
from MCTS import MCT
from tools import version_str, vector, log
import parameter
import numpy as np
import pickle
import profile


def move(currentPlayer, chessboards, player, temperature, _dataset):
	MCTs = []
	for board in chessboards:
		if not board.is_finish():
			MCTs.append(MCT(board, player))
	for simulate_cnt in range(parameter.gen_simulate_cnt):
		# print('simulate:', simulate_cnt)
		currentPlayer.simulates(MCTs)
	cnt = 0
	for i, board in enumerate(chessboards):
		if not board.is_finish():
			mct = MCTs[cnt]
			cnt += 1
			pi = mct.pi(temperature)
			_dataset.append((i, board.clone(), player, pi))
			action = np.random.choice(range(65), p=pi)
			board.move(action, player)


def gen(Player0, Player1, number=2048, path='train.pkl'):
	print('GENing:', path)
	_dataset, dataset = [], []
	chessboards = [ChessBoard() for i in range(number)]
	player = -1
	for move_cnt in range(64):
		print('gen move_cnt:', move_cnt)
		currentPlayer = Player0 if player == -1 else Player1
		temperature = 1 if move_cnt < 12 else 0
		move(currentPlayer, chessboards, player, temperature, _dataset)
		player = -player
	mp = dict()
	for i, board in enumerate(chessboards):
		v = board.evaluate()
		v = 1 if v > 0 else -1 if v < 0 else 0
		mp[i] = v
		dataset.append((board.board_array(), -1, -v, vector(64)))
		dataset.append((board.board_array(), 1, v, vector(64)))
	for i, board, player, pi in _dataset:
		v = -mp[i] if player == -1 else mp[i]
		dataset.append((board.board_array(), player, v, pi))
	with open(path, 'wb') as f:
		pickle.dump(dataset, f)


def main():
	net = Network('cnn_vnet', bn_training=False)
	net.restore('../vnet_save', version=version_str(193))
	Player0 = Player1 = Player(net)
	gen(Player0, Player1, 5000)


if __name__ == '__main__':
	main()
	# profile.run('main()', sort=1)

'''
32 128
24001476 function calls (23976220 primitive calls) in 362.375 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     1920  144.344    0.075  144.344    0.075 :0(TF_SessionRun_wrapper)
     1924   74.281    0.039   74.281    0.039 :0(array)
   247168   42.109    0.000   63.219    0.000 MCTS.py:35(reach_leaf)
   230918   28.906    0.000   56.094    0.000 MCTS.py:19(expand)
 14778752   24.219    0.000   24.219    0.000 :0(could_drop)
   254892    6.969    0.000    6.969    0.000 :0(clone)
   819612    4.844    0.000    4.844    0.000 MCTS.py:14(update)
     2048    4.188    0.002  356.844    0.174 player.py:22(simulates)
  2437503    4.172    0.000    4.172    0.000 :0(append)
   239444    3.438    0.000    8.953    0.000 :0(dirichlet)
   850386    2.984    0.000    2.984    0.000 :0(is_finish)
   230918    2.750    0.000    2.750    0.000 :0(to_network_input)
   247168    2.469    0.000    7.312    0.000 MCTS.py:89(back_up)
   239444    1.984    0.000    4.484    0.000 fromnumeric.py:69(_wrapreduction)
   580168    1.688    0.000    1.688    0.000 :0(move)
        1    1.516    1.516    1.516    1.516 :0(TF_NewSessionRef)
       64    1.500    0.023  359.391    5.615 gen_with_mcts.py:11(move)
   239444    1.422    0.000    1.422    0.000 :0(reduce)
   591663    1.297    0.000    1.297    0.000 :0(len)
   239444    1.031    0.000    5.516    0.000 fromnumeric.py:2083(any)
   239444    0.609    0.000    0.609    0.000 fromnumeric.py:70(<dictcomp>)
   247578    0.469    0.000    0.469    0.000 :0(items)
   232778    0.422    0.000    0.422    0.000 MCTS.py:9(__init__)
     7724    0.266    0.000    0.531    0.000 :0(choice)
   124531    0.188    0.000    0.250    0.000 :0(isinstance)
     1920    0.141    0.000  221.703    0.115 session.py:1063(_run)
     4430    0.141    0.000    0.328    0.000 ops.py:5222(get_controller)
    51257    0.109    0.000    0.141    0.000 :0(get)
5756/1920    0.094    0.000    0.453    0.000 session.py:242(for_fetch)
     1920    0.094    0.000  145.219    0.076 session.py:1288(_do_run)
     6563    0.094    0.000    0.234    0.000 pywrap_tensorflow_internal.py:1051(__init__)
     1920    0.078    0.000    0.297    0.000 session.py:515(build_results)
    32892    0.078    0.000    0.125    0.000 ops.py:619(__hash__)
    20841    0.078    0.000    0.125    0.000 pywrap_tensorflow_internal.py:39(_swig_setattr_nondynamic)
    15474    0.078    0.000    0.188    0.000 tensor_shape.py:466(as_dimension)
     7802    0.078    0.000    0.094    0.000 tensor_shape.py:30(__init__)
        1    0.078    0.078  359.547  359.547 gen_with_mcts.py:35(gen)
     7724    0.078    0.000    0.078    0.000 MCTS.py:71(pi)
    15448    0.078    0.000    0.125    0.000 getlimits.py:365(__new__)
     7724    0.078    0.000    0.141    0.000 numerictypes.py:365(issubdtype)
        1    0.078    0.078    0.078    0.078 :0(dump)
16010/6296    0.062    0.000    0.438    0.000 :0(next)
     3838    0.062    0.000    0.141    0.000 session.py:280(__init__)
7946/3089    0.062    0.000    0.125    0.000 contextlib.py:85(__exit__)
     1920    0.062    0.000    0.156    0.000 session.py:1377(_update_with_movers)
     1920    0.062    0.000    0.062    0.000 :0(ExtendSession)
      296    0.062    0.000    0.094    0.000 tf_stack.py:31(extract_stack)
    20841    0.062    0.000    0.188    0.000 pywrap_tensorflow_internal.py:58(_swig_setattr)
     1918    0.062    0.000    0.094    0.000 session.py:324(_uniquify_fetches)
    15448    0.062    0.000    0.062    0.000 numerictypes.py:293(issubclass_)
     7980    0.062    0.000    0.062    0.000 :0(board_array)
     1920    0.047    0.000  221.750    0.115 session.py:819(run)
     1920    0.047    0.000    0.969    0.001 session.py:458(__init__)
     3839    0.047    0.000    0.062    0.000 abc.py:178(__instancecheck__)
     5900    0.047    0.000    0.078    0.000 ops.py:3492(_as_graph_element_locked)
     1920    0.047    0.000  144.641    0.075 session.py:1315(_run_fn)
     1920    0.047    0.000    0.250    0.000 session.py:1350(_extend_graph)
     2071    0.047    0.000    0.094    0.000 lock_util.py:96(release)
    21561    0.047    0.000    0.047    0.000 ops.py:336(op)
    32892    0.047    0.000    0.047    0.000 :0(id)
    20122    0.047    0.000    0.219    0.000 pywrap_tensorflow_internal.py:1038(<lambda>)
     6996    0.047    0.000    0.047    0.000 pywrap_tensorflow_internal.py:1058(<lambda>)
     6273    0.047    0.000    0.438    0.000 ops.py:602(_as_tf_output)
     1919    0.047    0.000    0.047    0.000 session.py:1066(_feed_fn)
     1919    0.047    0.000    0.094    0.000 session_ops.py:275(_get_handle_mover)
     7724    0.047    0.000    0.156    0.000 MCTS.py:30(__init__)
     7946    0.031    0.000    0.031    0.000 contextlib.py:59(__init__)
    19651    0.031    0.000    0.031    0.000 :0(getattr)
     4430    0.031    0.000    0.031    0.000 context.py:343(_mode)
     5900    0.031    0.000    0.109    0.000 ops.py:3457(as_graph_element)
     3838    0.031    0.000    0.031    0.000 session.py:494(_assert_fetchable)
     1920    0.031    0.000  144.672    0.075 session.py:1332(_do_call)
     3838    0.031    0.000    0.031    0.000 session.py:316(build_results)
     2063    0.031    0.000    0.078    0.000 ops.py:351(name)
     7209    0.031    0.000    0.031    0.000 :0(TF_OperationName)
     1510    0.031    0.000    0.047    0.000 inspect.py:2434(__init__)
      571    0.031    0.000    0.047    0.000 ops.py:2308(get_attr)
     2061    0.031    0.000    0.047    0.000 ops.py:363(shape)
     1919    0.031    0.000    0.031    0.000 nest.py:189(flatten_dict_items)
     1919    0.031    0.000   74.312    0.039 numeric.py:469(asarray)
     2112    0.031    0.000    0.031    0.000 :0(print)
     7672    0.031    0.000    0.031    0.000 tensor_shape.py:88(is_compatible_with)
     3836    0.031    0.000    0.031    0.000 session.py:380(<listcomp>)
    16250    0.031    0.000    0.031    0.000 :0(win)
        1    0.016    0.016  362.359  362.359 gen_with_mcts.py:59(main)
     2215    0.016    0.000    0.016    0.000 ops.py:3706(as_default)
     7946    0.016    0.000    0.047    0.000 contextlib.py:157(helper)
     2366    0.016    0.000    0.016    0.000 <string>:12(__new__)
     2215    0.016    0.000    0.031    0.000 context.py:671(graph_mode)
     7677    0.016    0.000    0.016    0.000 _weakrefset.py:70(__contains__)
     3838    0.016    0.000    0.016    0.000 session.py:194(_is_attrs_instance)
     4433    0.016    0.000    0.016    0.000 ops.py:5545(get_default_graph)
     6894    0.016    0.000    0.031    0.000 ops.py:137(_as_graph_element)
     7764    0.016    0.000    0.016    0.000 ops.py:2234(graph)
     1920    0.016    0.000    0.016    0.000 session.py:492(<listcomp>)
     1920    0.016    0.000    0.016    0.000 session.py:499(fetches)
     1920    0.016    0.000    0.297    0.000 session.py:1311(<listcomp>)
     1920    0.016    0.000    0.016    0.000 session.py:1312(<listcomp>)
     1920    0.016    0.000    0.016    0.000 ops.py:4896(_session_run_lock)
     6213    0.016    0.000    0.016    0.000 lock_util.py:110(_validate_group_id)
     2071    0.016    0.000    0.031    0.000 lock_util.py:86(acquire)
     6213    0.016    0.000    0.016    0.000 :0(acquire)
     2071    0.016    0.000    0.016    0.000 :0(any)
     2071    0.016    0.000    0.031    0.000 threading.py:334(notify)
        1    0.016    0.016    0.031    0.031 saver.py:493(OpListToDict)
     6776    0.016    0.000    0.047    0.000 ops.py:1896(name)
      717    0.016    0.000    0.047    0.000 ops.py:1057(internal_convert_to_tensor)
     8542    0.016    0.000    0.031    0.000 ops.py:2229(type)
     8542    0.016    0.000    0.016    0.000 :0(TF_OperationOpType)
      295    0.016    0.000    0.078    0.000 ops.py:5603(_get_graph_from_inputs)
     1053    0.016    0.000    0.016    0.000 :0(hasattr)
      300    0.016    0.000    0.016    0.000 :0(match)
     2009    0.016    0.000    0.234    0.000 tensor_shape.py:507(__init__)
     2009    0.016    0.000    0.203    0.000 tensor_shape.py:542(<listcomp>)
      151    0.016    0.000    0.125    0.001 inspect.py:1082(getfullargspec)
      151    0.016    0.000    0.078    0.001 inspect.py:2095(_signature_from_function)
     1510    0.016    0.000    0.016    0.000 :0(isidentifier)
     3020    0.016    0.000    0.016    0.000 inspect.py:2483(name)
      151    0.016    0.000    0.031    0.000 ops.py:3261(<listcomp>)
      151    0.016    0.000    0.203    0.001 ops.py:1657(__init__)
      302    0.016    0.000    0.016    0.000 :0(ByteSize)
     6632    0.016    0.000    0.016    0.000 tf_stack.py:53(<lambda>)
      151    0.016    0.000    0.047    0.000 ops.py:1589(_create_c_op)
      151    0.016    0.000    0.031    0.000 ops.py:1797(<listcomp>)
     6563    0.016    0.000    0.406    0.000 c_api_util.py:174(tf_output)
     6563    0.016    0.000    0.016    0.000 :0(new_TF_Output)
     6563    0.016    0.000    0.062    0.000 pywrap_tensorflow_internal.py:1040(<lambda>)
     6563    0.016    0.000    0.047    0.000 pywrap_tensorflow_internal.py:73(_swig_getattr)
     6563    0.016    0.000    0.031    0.000 pywrap_tensorflow_internal.py:62(_swig_getattr_nondynamic)
      146    0.016    0.000    0.641    0.004 op_def_library.py:339(_apply_op_helper)
     2166    0.016    0.000    0.016    0.000 dtypes.py:89(_is_ref_dtype)
        4    0.016    0.004    0.016    0.004 tensor_util.py:304(<listcomp>)
        1    0.016    0.016    0.016    0.016 op_def_library.py:487(<listcomp>)
     3673    0.016    0.000    0.016    0.000 :0(HasField)
      433    0.016    0.000    0.031    0.000 ops.py:3668(_get_tensor_by_tf_output)
      433    0.016    0.000    0.016    0.000 ops.py:3643(_get_operation_by_tf_operation)
      145    0.016    0.000    0.016    0.000 ops.py:1272(internal_convert_to_tensor_or_indexed_slices)
      144    0.016    0.000    0.016    0.000 :0(TFE_Py_RecordGradient)
     2061    0.016    0.000    0.062    0.000 ops.py:492(get_shape)
      142    0.016    0.000    0.594    0.004 state_ops.py:192(assign)
     1919    0.016    0.000    0.281    0.000 tensor_shape.py:788(is_compatible_with)
     3838    0.016    0.000    0.016    0.000 tensor_shape.py:566(ndims)
     1919    0.016    0.000    0.047    0.000 session_ops.py:255(_get_handle_feeder)
     1918    0.016    0.000    0.078    0.000 session.py:376(build_results)
        1    0.016    0.016    0.016    0.016 :0(open)
        1    0.016    0.016    0.016    0.016 :0(TF_CloseSession)
        0    0.000             0.000          profile:0(profiler)
        1    0.000    0.000  362.375  362.375 profile:0(main())
        1    0.000    0.000  362.375  362.375 :0(exec)
        1    0.000    0.000  362.375  362.375 <string>:1(<module>)
        1    0.000    0.000    2.594    2.594 vnet.py:10(__init__)
        1    0.000    0.000    1.516    1.516 session.py:1529(__init__)
        1    0.000    0.000    1.516    1.516 session.py:625(__init__)
        3    0.000    0.000    0.000    0.000 :0(allocate_lock)
     3088    0.000    0.000    0.000    0.000 compat.py:42(as_bytes)
     2940    0.000    0.000    0.000    0.000 :0(encode)
        1    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:1656(TF_NewSessionOptions)
        1    0.000    0.000    0.000    0.000 :0(_TF_NewSessionOptions)
        1    0.000    0.000    0.000    0.000 :0(_TF_SetTarget)
      390    0.000    0.000    0.000    0.000 ops.py:2947(_c_graph)
        1    0.000    0.000    0.000    0.000 :0(TF_DeleteSessionOptions)
     7677    0.000    0.000    0.000    0.000 session.py:746(graph)
     1920    0.000    0.000    0.000    0.000 ops.py:2953(version)
7946/3089    0.000    0.000    0.344    0.000 contextlib.py:79(__enter__)
     7970    0.000    0.000    0.000    0.000 context.py:628(context)
     4430    0.000    0.000    0.000    0.000 context.py:606(context_switches)
     2510    0.000    0.000    0.000    0.000 ops.py:3187(building_function)
     2215    0.000    0.000    0.031    0.000 context.py:122(push)
     2370    0.000    0.000    0.000    0.000 :0(__new__)
     4430    0.000    0.000    0.000    0.000 ops.py:5032(get_controller)
     7676    0.000    0.000    0.000    0.000 session.py:127(<lambda>)
     4433    0.000    0.000    0.000    0.000 ops.py:5202(get_default)
     4433    0.000    0.000    0.000    0.000 ops.py:5015(get_default)
     5155    0.000    0.000    0.000    0.000 :0(pop)
     2215    0.000    0.000    0.000    0.000 context.py:138(pop)
     3838    0.000    0.000    0.000    0.000 session.py:313(unique_fetches)
     3838    0.000    0.000    0.000    0.000 ops.py:4758(is_fetchable)
     1920    0.000    0.000    0.000    0.000 session.py:507(targets)
     3839    0.000    0.000    0.141    0.000 session.py:1310(<genexpr>)
     2071    0.000    0.000    0.000    0.000 lock_util.py:74(group)
     2071    0.000    0.000    0.000    0.000 lock_util.py:119(__init__)
     2071    0.000    0.000    0.031    0.000 lock_util.py:123(__enter__)
     2071    0.000    0.000    0.016    0.000 lock_util.py:106(_another_group_active)
     4142    0.000    0.000    0.000    0.000 lock_util.py:108(<genexpr>)
     4142    0.000    0.000    0.000    0.000 :0(release)
     2071    0.000    0.000    0.094    0.000 lock_util.py:126(__exit__)
     2071    0.000    0.000    0.031    0.000 threading.py:357(notify_all)
     2071    0.000    0.000    0.016    0.000 threading.py:254(_is_owned)
     1920    0.000    0.000  144.344    0.075 session.py:1403(_call_tf_sessionrun)
        1    0.000    0.000    0.797    0.797 saver.py:968(__init__)
      595    0.000    0.000    0.000    0.000 context.py:655(executing_eagerly)
      749    0.000    0.000    0.000    0.000 context.py:364(executing_eagerly)
        1    0.000    0.000    0.797    0.797 saver.py:1111(build)
        1    0.000    0.000    0.797    0.797 saver.py:1120(_build)
        1    0.000    0.000    0.000    0.000 saver.py:163(__init__)
        1    0.000    0.000    0.797    0.797 saver.py:756(_build_internal)
        1    0.000    0.000    0.031    0.031 saver.py:656(_ValidateAndSliceInputs)
      146    0.000    0.000    0.016    0.000 :0(sorted)
      142    0.000    0.000    0.016    0.000 saver.py:517(<lambda>)
      142    0.000    0.000    0.016    0.000 variables.py:2278(name)
      142    0.000    0.000    0.000    0.000 variables.py:821(_TensorConversionFunction)
      142    0.000    0.000    0.000    0.000 variables.py:1592(_ref)
      284    0.000    0.000    0.000    0.000 saver.py:462(_IsVariable)
      142    0.000    0.000    0.000    0.000 saver.py:679(<lambda>)
      284    0.000    0.000    0.000    0.000 saver.py:578(SaveableObjectsForOp)
      571    0.000    0.000    0.000    0.000 ops.py:978(_TensorTensorConversionFunction)
      142    0.000    0.000    0.000    0.000 saver.py:107(__init__)
     3504    0.000    0.000    0.000    0.000 ops.py:341(dtype)
      142    0.000    0.000    0.000    0.000 saveable_object.py:24(__init__)
      444    0.000    0.000    0.000    0.000 :0(callable)
      142    0.000    0.000    0.000    0.000 saveable_object.py:54(__init__)
      142    0.000    0.000    0.000    0.000 saver.py:684(_AddSaveable)
      287    0.000    0.000    0.000    0.000 :0(add)
        1    0.000    0.000    0.000    0.000 saver.py:778(<listcomp>)
      149    0.000    0.000    0.000    0.000 ops.py:5968(__init__)
      149    0.000    0.000    0.062    0.000 ops.py:5982(__enter__)
        2    0.000    0.000    0.000    0.000 ops.py:5209(_GetGlobalDefaultGraph)
        1    0.000    0.000    0.000    0.000 ops.py:2794(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:74(RLock)
        1    0.000    0.000    0.000    0.000 lock_util.py:54(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:215(__init__)
      145    0.000    0.000    0.000    0.000 traceable_stack.py:80(__init__)
      291    0.000    0.000    0.000    0.000 ops.py:204(uid)
      291    0.000    0.000    0.000    0.000 :0(TFE_Py_UID)
        1    0.000    0.000    0.000    0.000 op_def_registry.py:40(get_registered_ops)
        1    0.000    0.000    0.000    0.000 c_api_util.py:45(__init__)
        1    0.000    0.000    0.000    0.000 :0(TF_NewGraph)
        1    0.000    0.000    0.000    0.000 :0(SetRequireShapeInferenceFns)
     7176    0.000    0.000    0.016    0.000 ops.py:346(graph)
      567    0.000    0.000    0.000    0.000 ops.py:5588(_assert_same_graph)
      298    0.000    0.000    0.016    0.000 ops.py:3907(name_scope)
      899    0.000    0.000    0.016    0.000 compat.py:64(as_text)
      601    0.000    0.000    0.000    0.000 ops.py:3895(_name_stack)
      152    0.000    0.000    0.000    0.000 ops.py:4022(unique_name)
      152    0.000    0.000    0.000    0.000 :0(lower)
      298    0.000    0.000    0.000    0.000 ops.py:3902(_name_stack)
        5    0.000    0.000    0.031    0.006 constant_op.py:117(constant)
        5    0.000    0.000    0.016    0.003 tensor_util.py:356(make_tensor_proto)
      182    0.000    0.000    0.000    0.000 dtypes.py:265(__eq__)
        5    0.000    0.000    0.016    0.003 tensor_util.py:345(_AssertCompatible)
        5    0.000    0.000    0.016    0.003 tensor_util.py:347(<listcomp>)
        1    0.000    0.000    0.000    0.000 tensor_util.py:317(_FilterNotTensor)
        9    0.000    0.000    0.000    0.000 tensor_util.py:253(_FirstNotNone)
      9/5    0.000    0.000    0.000    0.000 tensor_util.py:218(_GetDenseDimensions)
     2345    0.000    0.000    0.000    0.000 dtypes.py:661(as_dtype)
     2201    0.000    0.000    0.000    0.000 dtypes.py:130(as_datatype_enum)
     1924    0.000    0.000    0.219    0.000 tensor_shape.py:942(as_shape)
     4381    0.000    0.000    0.000    0.000 :0(iter)
        5    0.000    0.000    0.000    0.000 tensor_shape.py:907(as_proto)
        5    0.000    0.000    0.000    0.000 tensor_shape.py:913(<listcomp>)
        9    0.000    0.000    0.000    0.000 dtypes.py:293(__hash__)
        5    0.000    0.000    0.000    0.000 tensor_util.py:527(<listcomp>)
 1710/574    0.000    0.000    0.000    0.000 tensor_util.py:228(_FlattenToStrings)
      589    0.000    0.000    0.000    0.000 :0(extend)
      444    0.000    0.000    0.000    0.000 :0(CopyFrom)
      151    0.000    0.000    0.391    0.003 deprecation.py:454(new_func)
      151    0.000    0.000    0.000    0.000 context.py:794(_tmp_in_graph_mode)
      151    0.000    0.000    0.156    0.001 tf_inspect.py:219(getcallargs)
      151    0.000    0.000    0.141    0.001 tf_inspect.py:199(getfullargspec)
      302    0.000    0.000    0.016    0.000 tf_decorator.py:104(unwrap)
      151    0.000    0.000    0.078    0.001 inspect.py:2176(_signature_from_callable)
      302    0.000    0.000    0.000    0.000 inspect.py:159(isfunction)
      151    0.000    0.000    0.016    0.000 inspect.py:2713(__init__)
     1661    0.000    0.000    0.016    0.000 inspect.py:2758(<genexpr>)
      151    0.000    0.000    0.000    0.000 inspect.py:2792(return_annotation)
      151    0.000    0.000    0.000    0.000 inspect.py:2788(parameters)
      297    0.000    0.000    0.000    0.000 :0(values)
     1510    0.000    0.000    0.000    0.000 inspect.py:2495(kind)
     2416    0.000    0.000    0.000    0.000 inspect.py:2487(default)
     1510    0.000    0.000    0.000    0.000 inspect.py:2491(annotation)
      151    0.000    0.000    0.000    0.000 tf_inspect.py:214(<genexpr>)
      151    0.000    0.000    0.000    0.000 :0(copy)
      151    0.000    0.000    0.000    0.000 tf_inspect.py:333(ismethod)
      151    0.000    0.000    0.000    0.000 inspect.py:81(ismethod)
      151    0.000    0.000    0.000    0.000 tf_inspect.py:240(<listcomp>)
      155    0.000    0.000    0.000    0.000 :0(update)
      151    0.000    0.000    0.234    0.002 ops.py:3193(create_op)
      453    0.000    0.000    0.000    0.000 ops.py:2912(_check_not_finalized)
      151    0.000    0.000    0.000    0.000 ops.py:1554(_NodeDef)
     2070    0.000    0.000    0.000    0.000 six.py:586(iteritems)
      151    0.000    0.000    0.000    0.000 ops.py:4400(_control_dependencies_for_inputs)
      310    0.000    0.000    0.000    0.000 ops.py:4858(_control_dependencies_stack)
      151    0.000    0.000    0.000    0.000 ops.py:4889(_mutation_lock)
        5    0.000    0.000    0.000    0.000 ops.py:1740(<listcomp>)
      151    0.000    0.000    0.000    0.000 ops.py:3684(_next_id)
      329    0.000    0.000    0.000    0.000 :0(exc_info)
      296    0.000    0.000    0.000    0.000 :0(reverse)
      151    0.000    0.000    0.000    0.000 ops.py:3022(_get_control_flow_context)
        5    0.000    0.000    0.000    0.000 ops.py:3695(_get_op_def)
     1152    0.000    0.000    0.016    0.000 c_api_util.py:141(tf_buffer)
      576    0.000    0.000    0.016    0.000 :0(TF_NewBuffer)
      719    0.000    0.000    0.016    0.000 pywrap_tensorflow_internal.py:894(<lambda>)
        5    0.000    0.000    0.000    0.000 :0(TF_GraphGetOpDef)
      543    0.000    0.000    0.000    0.000 :0(TF_GetBuffer)
      719    0.000    0.000    0.000    0.000 :0(TF_DeleteBuffer)
      543    0.000    0.000    0.000    0.000 :0(ParseFromString)
      719    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:918(<lambda>)
      151    0.000    0.000    0.000    0.000 ops.py:1820(_reconstruct_sequence_inputs)
      151    0.000    0.000    0.000    0.000 :0(TF_NewOperation)
      151    0.000    0.000    0.000    0.000 _collections_abc.py:676(items)
      151    0.000    0.000    0.000    0.000 _collections_abc.py:698(__init__)
      590    0.000    0.000    0.000    0.000 _collections_abc.py:742(__iter__)
      582    0.000    0.000    0.000    0.000 :0(SerializeToString)
      439    0.000    0.000    0.000    0.000 :0(TF_SetAttrValueProto)
      151    0.000    0.000    0.000    0.000 :0(TF_FinishOperation)
      151    0.000    0.000    0.000    0.000 :0(TF_OperationNumOutputs)
     6563    0.000    0.000    0.000    0.000 :0(TF_Output_oper_set)
     6563    0.000    0.000    0.000    0.000 :0(TF_Output_index_set)
      290    0.000    0.000    0.000    0.000 :0(TF_OperationOutputType)
      151    0.000    0.000    0.000    0.000 ops.py:1800(<listcomp>)
      290    0.000    0.000    0.000    0.000 ops.py:304(__init__)
      151    0.000    0.000    0.000    0.000 ops.py:2921(_add_op)
      453    0.000    0.000    0.000    0.000 ops.py:1901(_id)
      151    0.000    0.000    0.000    0.000 :0(max)
      151    0.000    0.000    0.031    0.000 ops.py:1809(_control_flow_post_processing)
      295    0.000    0.000    0.031    0.000 ops.py:2132(inputs)
      151    0.000    0.000    0.000    0.000 :0(GetOperationInputs)
      151    0.000    0.000    0.031    0.000 ops.py:2139(<listcomp>)
      151    0.000    0.000    0.000    0.000 ops.py:2112(__init__)
      151    0.000    0.000    0.000    0.000 ops.py:2115(__iter__)
      151    0.000    0.000    0.000    0.000 ops.py:3340(_create_op_helper)
      151    0.000    0.000    0.000    0.000 ops.py:4434(_record_op_seen_by_control_dependencies)
      151    0.000    0.000    0.000    0.000 ops.py:4251(_apply_device_functions)
      449    0.000    0.000    0.000    0.000 ops.py:4782(_device_function_stack)
      294    0.000    0.000    0.000    0.000 traceable_stack.py:112(peek_objs)
      294    0.000    0.000    0.000    0.000 traceable_stack.py:114(<listcomp>)
      151    0.000    0.000    0.000    0.000 ops.py:4803(_snapshot_device_function_stack_metadata)
      302    0.000    0.000    0.000    0.000 traceable_stack.py:116(peek_traceable_objs)
      151    0.000    0.000    0.000    0.000 ops.py:4844(_snapshot_colocation_stack_metadata)
      731    0.000    0.000    0.000    0.000 ops.py:4829(_colocation_stack)
      151    0.000    0.000    0.000    0.000 ops.py:4847(<dictcomp>)
      151    0.000    0.000    0.000    0.000 traceable_stack.py:120(__len__)
      583    0.000    0.000    0.000    0.000 ops.py:2102(outputs)
        1    0.000    0.000    0.078    0.078 saver.py:274(_AddSaveOps)
        1    0.000    0.000    0.062    0.062 saver.py:166(save_op)
      142    0.000    0.000    0.000    0.000 saveable_object.py:46(tensor)
        1    0.000    0.000    0.047    0.047 gen_io_ops.py:1664(save_v2)
      146    0.000    0.000    0.000    0.000 op_def_library.py:83(_Flatten)
      146    0.000    0.000    0.000    0.000 op_def_library.py:86(<listcomp>)
      580    0.000    0.000    0.000    0.000 op_def_library.py:79(_IsListValue)
      146    0.000    0.000    0.000    0.000 op_def_library.py:88(<listcomp>)
      292    0.000    0.000    0.000    0.000 op_def_library.py:63(_IsListParameter)
      725    0.000    0.000    0.000    0.000 dtypes.py:242(is_compatible_with)
     1739    0.000    0.000    0.000    0.000 dtypes.py:102(base_dtype)
      292    0.000    0.000    0.000    0.000 op_def_library.py:550(<listcomp>)
      152    0.000    0.000    0.000    0.000 dtypes.py:275(__ne__)
        4    0.000    0.000    0.000    0.000 array_ops.py:958(_autopacking_conversion_function)
        4    0.000    0.000    0.000    0.000 array_ops.py:928(_get_dtype_from_nested_lists)
      568    0.000    0.000    0.000    0.000 ops.py:156(is_dense_tensor_like)
        4    0.000    0.000    0.031    0.008 constant_op.py:226(_constant_tensor_conversion_function)
        4    0.000    0.000    0.000    0.000 dtypes.py:121(is_numpy_compatible)
     1923    0.000    0.000    0.000    0.000 dtypes.py:125(as_numpy_dtype)
    572/4    0.000    0.000    0.016    0.004 tensor_util.py:302(_FilterStr)
        9    0.000    0.000    0.000    0.000 _internal.py:879(npy_ctypes_check)
    11742    0.000    0.000    0.000    0.000 tensor_shape.py:83(value)
        1    0.000    0.000    0.000    0.000 ops.py:1167(internal_convert_n_to_tensor)
      285    0.000    0.000    0.000    0.000 op_def_library.py:37(_Attr)
      712    0.000    0.000    0.000    0.000 op_def_library.py:52(_SatisfiesTypeConstraint)
      539    0.000    0.000    0.000    0.000 :0(startswith)
        2    0.000    0.000    0.000    0.000 :0(SetInParent)
        2    0.000    0.000    0.000    0.000 op_def_library.py:723(<listcomp>)
      427    0.000    0.000    0.000    0.000 op_def_library.py:172(_MakeType)
      146    0.000    0.000    0.000    0.000 op_def_library.py:781(<listcomp>)
  576/292    0.000    0.000    0.047    0.000 op_def_library.py:248(_MaybeColocateWith)
      148    0.000    0.000    0.000    0.000 ops.py:2732(_name_from_scope_name)
      430    0.000    0.000    0.000    0.000 :0(all)
      579    0.000    0.000    0.000    0.000 ops.py:1743(<genexpr>)
     6273    0.000    0.000    0.000    0.000 ops.py:563(value_index)
      291    0.000    0.000    0.000    0.000 :0(TF_AddInput)
        1    0.000    0.000    0.016    0.016 ops.py:1611(<listcomp>)
        1    0.000    0.000    0.000    0.000 :0(TF_AddInputList)
      433    0.000    0.000    0.000    0.000 ops.py:3620(_get_operation_by_name_unsafe)
      433    0.000    0.000    0.000    0.000 control_flow_util.py:225(CheckInputFromValidContext)
      866    0.000    0.000    0.000    0.000 ops.py:1880(_get_control_flow_context)
      433    0.000    0.000    0.000    0.000 control_flow_util.py:139(GetOutputContext)
      149    0.000    0.000    0.000    0.000 ops.py:6033(__exit__)
        1    0.000    0.000    0.016    0.016 control_flow_ops.py:3340(with_dependencies)
      143    0.000    0.000    0.000    0.000 ops.py:4970(colocate_with)
      143    0.000    0.000    0.000    0.000 ops.py:4952(_colocate_with_for_gradient)
      286    0.000    0.000    0.047    0.000 ops.py:4091(_colocate_with_for_gradient)
      286    0.000    0.000    0.047    0.000 ops.py:4104(colocate_with)
      286    0.000    0.000    0.000    0.000 ops.py:4820(_device_function_stack)
      145    0.000    0.000    0.031    0.000 traceable_stack.py:89(push_obj)
      292    0.000    0.000    0.000    0.000 traceable_stack.py:30(__init__)
      145    0.000    0.000    0.031    0.000 traceable_stack.py:35(set_filename_and_line_from_caller)
        2    0.000    0.000    0.000    0.000 ops.py:4975(control_dependencies)
        2    0.000    0.000    0.000    0.000 ops.py:4443(control_dependencies)
        2    0.000    0.000    0.000    0.000 ops.py:4393(_current_control_dependencies)
        2    0.000    0.000    0.000    0.000 ops.py:4323(__init__)
        2    0.000    0.000    0.000    0.000 ops.py:4358(__enter__)
        2    0.000    0.000    0.000    0.000 ops.py:4386(_push_control_dependencies_controller)
        1    0.000    0.000    0.000    0.000 ops.py:1247(convert_to_tensor_or_indexed_slices)
        1    0.000    0.000    0.016    0.016 control_flow_ops.py:173(_Identity)
        1    0.000    0.000    0.016    0.016 array_ops.py:59(identity)
        1    0.000    0.000    0.016    0.016 gen_array_ops.py:3441(identity)
      144    0.000    0.000    0.000    0.000 op_def_library.py:45(_AttrValue)
        1    0.000    0.000    0.000    0.000 ops.py:4383(op_in_group)
        2    0.000    0.000    0.000    0.000 ops.py:4376(control_inputs)
        2    0.000    0.000    0.000    0.000 ops.py:4431(<listcomp>)
      143    0.000    0.000    0.000    0.000 :0(TF_AddControlInput)
        2    0.000    0.000    0.000    0.000 ops.py:4380(add_op)
      147    0.000    0.000    0.000    0.000 traceable_stack.py:72(copy_metadata)
      143    0.000    0.000    0.000    0.000 ops.py:1855(colocation_groups)
      571    0.000    0.000    0.000    0.000 :0(TF_OperationGetAttrValueProto)
       33    0.000    0.000    0.000    0.000 errors_impl.py:242(__init__)
       33    0.000    0.000    0.000    0.000 errors_impl.py:42(__init__)
       33    0.000    0.000    0.000    0.000 :0(throw)
       33    0.000    0.000    0.000    0.000 errors_impl.py:95(__str__)
       33    0.000    0.000    0.000    0.000 errors_impl.py:64(message)
      431    0.000    0.000    0.000    0.000 ops.py:1906(device)
      431    0.000    0.000    0.000    0.000 :0(TF_OperationDevice)
      143    0.000    0.000    0.000    0.000 ops.py:2297(_set_attr)
      143    0.000    0.000    0.000    0.000 :0(TF_NewBufferFromString)
      143    0.000    0.000    0.000    0.000 :0(SetAttr)
      538    0.000    0.000    0.000    0.000 :0(WhichOneof)
      144    0.000    0.000    0.016    0.000 backprop.py:123(_record_gradient)
        2    0.000    0.000    0.000    0.000 ops.py:4368(__exit__)
        2    0.000    0.000    0.000    0.000 ops.py:4389(_pop_control_dependencies_controller)
      145    0.000    0.000    0.000    0.000 traceable_stack.py:108(pop_obj)
        1    0.000    0.000    0.688    0.688 saver.py:383(_AddRestoreOps)
        1    0.000    0.000    0.078    0.078 saver.py:849(bulk_restore)
        2    0.000    0.000    0.000    0.000 ops.py:4908(device)
        4    0.000    0.000    0.000    0.000 ops.py:4187(device)
        2    0.000    0.000    0.000    0.000 ops.py:4180(_add_device_to_stack)
        2    0.000    0.000    0.000    0.000 ops.py:82(__init__)
        2    0.000    0.000    0.000    0.000 device.py:274(merge_device)
        5    0.000    0.000    0.000    0.000 device.py:217(from_string)
        5    0.000    0.000    0.000    0.000 device.py:68(__init__)
        5    0.000    0.000    0.000    0.000 device.py:103(job)
        5    0.000    0.000    0.000    0.000 device.py:114(replica)
        5    0.000    0.000    0.000    0.000 device.py:125(task)
       13    0.000    0.000    0.000    0.000 device.py:196(to_string)
       17    0.000    0.000    0.000    0.000 device.py:99(job)
       17    0.000    0.000    0.000    0.000 device.py:110(replica)
       17    0.000    0.000    0.000    0.000 device.py:121(task)
        5    0.000    0.000    0.000    0.000 :0(hash)
        5    0.000    0.000    0.000    0.000 device.py:132(parse_from_string)
        5    0.000    0.000    0.000    0.000 device.py:92(_clear)
       11    0.000    0.000    0.000    0.000 :0(split)
        5    0.000    0.000    0.000    0.000 device.py:150(<listcomp>)
       11    0.000    0.000    0.000    0.000 :0(upper)
        3    0.000    0.000    0.000    0.000 device.py:237(__hash__)
        2    0.000    0.000    0.000    0.000 device.py:234(__eq__)
        1    0.000    0.000    0.078    0.078 gen_io_ops.py:1424(restore_v2)
        1    0.000    0.000    0.000    0.000 gen_io_ops.py:1463(<listcomp>)
      142    0.000    0.000    0.000    0.000 execute.py:121(make_type)
        4    0.000    0.000    0.000    0.000 device.py:313(_device_function)
        4    0.000    0.000    0.000    0.000 copy.py:66(copy)
    25094    0.000    0.000    0.000    0.000 :0(issubclass)
        4    0.000    0.000    0.000    0.000 :0(__reduce_ex__)
        4    0.000    0.000    0.000    0.000 copy.py:268(_reconstruct)
        4    0.000    0.000    0.000    0.000 copyreg.py:87(__newobj__)
        4    0.000    0.000    0.000    0.000 device.py:179(merge_from)
        4    0.000    0.000    0.000    0.000 ops.py:2021(_set_device)
        4    0.000    0.000    0.000    0.000 ops.py:1547(_device_string)
        4    0.000    0.000    0.000    0.000 :0(SetRequestedDevice)
        1    0.000    0.000    0.000    0.000 ops.py:2338(<listcomp>)
      142    0.000    0.000    0.609    0.004 saver.py:111(restore)
      142    0.000    0.000    0.000    0.000 tensor_shape.py:880(is_fully_defined)
      368    0.000    0.000    0.000    0.000 tensor_shape.py:882(<genexpr>)
      142    0.000    0.000    0.562    0.004 gen_state_ops.py:28(assign)
      284    0.000    0.000    0.000    0.000 execute.py:114(make_bool)
      284    0.000    0.000    0.000    0.000 op_def_library.py:638(<genexpr>)
      284    0.000    0.000    0.000    0.000 op_def_library.py:165(_MakeBool)
      142    0.000    0.000    0.000    0.000 op_def_library.py:772(<listcomp>)
      142    0.000    0.000    0.000    0.000 dtypes.py:94(_as_ref)
       85    0.000    0.000    0.016    0.000 ops.py:434(_c_api_shape)
       85    0.000    0.000    0.000    0.000 :0(TF_GraphGetTensorShapeHelper)
       85    0.000    0.000    0.000    0.000 ops.py:442(<listcomp>)
      110    0.000    0.000    0.000    0.000 ops.py:1868(<listcomp>)
        1    0.000    0.000    0.000    0.000 control_flow_ops.py:3388(group)
        1    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:2124(Flatten)
        1    0.000    0.000    0.000    0.000 :0(Flatten)
      284    0.000    0.000    0.000    0.000 ops.py:358(device)
        1    0.000    0.000    0.000    0.000 control_flow_ops.py:3378(_GroupControlDeps)
        1    0.000    0.000    0.000    0.000 gen_control_flow_ops.py:487(no_op)
        1    0.000    0.000    0.000    0.000 ops.py:3853(get_all_collection_keys)
        1    0.000    0.000    0.000    0.000 ops.py:3856(<listcomp>)
        2    0.000    0.000    0.000    0.000 saver.py:1170(_check_saver_def)
        1    0.000    0.000    0.000    0.000 :0(time)
        1    0.000    0.000    0.000    0.000 tools.py:11(version_str)
        1    0.000    0.000    0.000    0.000 :0(zfill)
        1    0.000    0.000    0.109    0.109 vnet.py:53(restore)
        1    0.000    0.000    0.109    0.109 saver.py:1513(restore)
        1    0.000    0.000    0.000    0.000 checkpoint_management.py:347(checkpoint_exists)
        1    0.000    0.000    0.000    0.000 checkpoint_management.py:298(_prefix_to_checkpoint_path)
        1    0.000    0.000    0.000    0.000 file_io.py:317(get_matching_files)
        1    0.000    0.000    0.000    0.000 errors_impl.py:518(__enter__)
        1    0.000    0.000    0.000    0.000 c_api_util.py:32(__init__)
        1    0.000    0.000    0.000    0.000 :0(TF_NewStatus)
        1    0.000    0.000    0.000    0.000 :0(GetMatchingFiles)
        1    0.000    0.000    0.000    0.000 file_io.py:334(<listcomp>)
        1    0.000    0.000    0.000    0.000 compat.py:96(as_str_any)
        1    0.000    0.000    0.000    0.000 :0(decode)
        1    0.000    0.000    0.000    0.000 errors_impl.py:522(__exit__)
        1    0.000    0.000    0.000    0.000 :0(TF_GetCode)
        1    0.000    0.000    0.000    0.000 c_api_util.py:35(__del__)
        1    0.000    0.000    0.000    0.000 :0(TF_DeleteStatus)
        1    0.000    0.000    0.000    0.000 tf_logging.py:113(info)
        1    0.000    0.000    0.000    0.000 tf_logging.py:45(_get_logger)
        1    0.000    0.000    0.000    0.000 __init__.py:1296(info)
        1    0.000    0.000    0.000    0.000 __init__.py:1542(isEnabledFor)
        1    0.000    0.000    0.000    0.000 __init__.py:1528(getEffectiveLevel)
     1919    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:2072(IsSequence)
     1919    0.000    0.000    0.000    0.000 :0(IsSequence)
     1919    0.000    0.000    0.000    0.000 session.py:128(<lambda>)
     3838    0.000    0.000    0.000    0.000 tensor_shape.py:556(dims)
     1919    0.000    0.000    0.000    0.000 ops.py:4750(is_feedable)
        1    0.000    0.000    0.000    0.000 player.py:8(__init__)
        1    0.000    0.000    0.000    0.000 gen_with_mcts.py:37(<listcomp>)
     1918    0.000    0.000    0.453    0.000 session.py:363(__init__)
     1918    0.000    0.000    0.359    0.000 session.py:370(<listcomp>)
     1918    0.000    0.000    0.000    0.000 session.py:373(unique_fetches)
     7980    0.000    0.000    0.000    0.000 :0(zeros)
      128    0.000    0.000    0.000    0.000 :0(evaluate)
      256    0.000    0.000    0.000    0.000 tools.py:42(vector)
        1    0.000    0.000    0.016    0.016 session.py:730(__del__)
        1    0.000    0.000    0.016    0.016 session.py:717(close)
        1    0.000    0.000    0.000    0.000 :0(TF_DeleteSession)
        1    0.000    0.000    0.000    0.000 :0(setprofile)



Process finished with exit code 0
'''
