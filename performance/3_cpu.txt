498 : 0.488
499 : 0.488
learning end.
         10303153 function calls (10057227 primitive calls) in 113.328 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    30439   49.125    0.002   49.125    0.002 :0(TF_SessionRun_wrapper)
    31453   17.328    0.001   17.328    0.001 :0(array)
    30439    2.953    0.000  101.453    0.003 session.py:1063(_run)
    29935    2.891    0.000    4.016    0.000 :0(choice)
  1277929    2.375    0.000    2.734    0.000 :0(isinstance)
    29935    2.000    0.000    7.625    0.000 network.py:24(choice)
    61160    1.078    0.000    4.047    0.000 ops.py:5222(get_controller)
    30439    1.016    0.000   10.281    0.000 session.py:458(__init__)
   186387    0.891    0.000    1.172    0.000 pywrap_tensorflow_internal.py:39(_swig_setattr_nondynamic)
    44914    0.891    0.000    0.891    0.000 :0(to_network_input)
    61924    0.812    0.000    1.859    0.000 ops.py:3492(_as_graph_element_locked)
   277002    0.766    0.000    1.141    0.000 ops.py:619(__hash__)
   186387    0.750    0.000    1.922    0.000 pywrap_tensorflow_internal.py:58(_swig_setattr)
   123688    0.750    0.000    1.094    0.000 tensor_shape.py:30(__init__)
    30439    0.734    0.000   58.641    0.002 session.py:1288(_do_run)
    30439    0.703    0.000    1.594    0.000 session.py:515(build_results)
   246921    0.688    0.000    2.109    0.000 tensor_shape.py:466(as_dimension)
184578/61962    0.625    0.000    4.359    0.000 :0(next)
    30439    0.625    0.000    3.141    0.000 session.py:242(for_fetch)
   186106    0.609    0.000    2.531    0.000 pywrap_tensorflow_internal.py:1038(<lambda>)
   123233    0.578    0.000    1.172    0.000 tensor_shape.py:88(is_compatible_with)
   328834    0.562    0.000    0.766    0.000 :0(get)
    31433    0.562    0.000    4.547    0.000 tensor_shape.py:788(is_compatible_with)
    29935    0.547    0.000    0.547    0.000 :0(reduce)
    61978    0.500    0.000    4.234    0.000 c_api_util.py:174(tf_output)
    30435    0.500    0.000    1.078    0.000 nest.py:189(flatten_dict_items)
   264038    0.469    0.000    0.469    0.000 :0(append)
    29935    0.469    0.000   71.422    0.002 network.py:76(get_probability)
    29935    0.469    0.000    1.156    0.000 fromnumeric.py:69(_wrapreduction)
    92265    0.453    0.000    0.641    0.000 contextlib.py:59(__init__)
    61978    0.453    0.000    1.859    0.000 pywrap_tensorflow_internal.py:1051(__init__)
    60097    0.453    0.000    0.453    0.000 :0(drop_list)
    61924    0.438    0.000    2.297    0.000 ops.py:3457(as_graph_element)
    92265    0.422    0.000    1.062    0.000 contextlib.py:157(helper)
   185433    0.422    0.000    0.422    0.000 :0(getattr)
    30439    0.391    0.000    1.031    0.000 session.py:1377(_update_with_movers)
      499    0.391    0.001   80.328    0.161 match.py:5(match)
   277002    0.375    0.000    0.375    0.000 :0(id)
92265/30957    0.359    0.000    1.516    0.000 contextlib.py:85(__exit__)
    30439    0.344    0.000  101.797    0.003 session.py:819(run)
    30439    0.344    0.000   52.469    0.002 session.py:1315(_run_fn)
    29935    0.344    0.000   79.391    0.003 network.py:88(play)
    50156    0.344    0.000    0.406    0.000 getlimits.py:365(__new__)
185271/185269    0.328    0.000    0.328    0.000 :0(len)
    25078    0.328    0.000    0.719    0.000 numerictypes.py:365(issubdtype)
    31433    0.312    0.000    0.484    0.000 session.py:1066(_feed_fn)
    30439    0.297    0.000    2.828    0.000 session.py:1350(_extend_graph)
    30523    0.297    0.000    0.766    0.000 lock_util.py:86(acquire)
    31770    0.297    0.000    2.422    0.000 tensor_shape.py:507(__init__)
    61858    0.297    0.000    4.719    0.000 ops.py:602(_as_tf_output)
    31609    0.281    0.000    0.578    0.000 ops.py:351(name)
92265/30957    0.266    0.000    3.047    0.000 contextlib.py:79(__enter__)
    30580    0.266    0.000    0.531    0.000 context.py:122(push)
    61160    0.266    0.000    0.328    0.000 ops.py:5032(get_controller)
    30439    0.266    0.000   52.734    0.002 session.py:1332(_do_call)
    30523    0.266    0.000    0.828    0.000 lock_util.py:96(release)
    95001    0.266    0.000    0.484    0.000 ops.py:1896(name)
    30439    0.250    0.000    0.250    0.000 :0(ExtendSession)
    61978    0.250    0.000    0.328    0.000 pywrap_tensorflow_internal.py:62(_swig_getattr_nondynamic)
      499    0.234    0.000    0.797    0.002 network.py:38(pretreatment)
    62260    0.219    0.000    0.359    0.000 ops.py:137(_as_graph_element)
   151945    0.219    0.000    0.219    0.000 :0(items)
    30523    0.219    0.000    0.312    0.000 threading.py:334(notify)
    95173    0.219    0.000    0.219    0.000 :0(TF_OperationName)
   184863    0.219    0.000    0.219    0.000 tensor_shape.py:83(value)
    50156    0.219    0.000    0.328    0.000 numerictypes.py:293(issubclass_)
    30439    0.203    0.000    2.016    0.000 session.py:1311(<listcomp>)
    30523    0.203    0.000    0.297    0.000 lock_util.py:74(group)
   183783    0.203    0.000    0.203    0.000 ops.py:336(op)
    29935    0.203    0.000    1.391    0.000 fromnumeric.py:1966(sum)
    92361    0.188    0.000    0.188    0.000 context.py:628(context)
    30443    0.188    0.000    0.359    0.000 abc.py:178(__instancecheck__)
    30523    0.188    0.000    0.406    0.000 lock_util.py:106(_another_group_active)
    31722    0.188    0.000    1.922    0.000 tensor_shape.py:542(<listcomp>)
    61978    0.188    0.000    0.516    0.000 pywrap_tensorflow_internal.py:73(_swig_getattr)
    30580    0.172    0.000    0.625    0.000 ops.py:3706(as_default)
    60882    0.172    0.000    0.172    0.000 _weakrefset.py:70(__contains__)
    30439    0.172    0.000    0.297    0.000 session.py:492(<listcomp>)
    61872    0.172    0.000    3.062    0.000 session.py:1310(<genexpr>)
    30439    0.172    0.000   49.297    0.002 session.py:1403(_call_tf_sessionrun)
    60232    0.172    0.000    0.281    0.000 ops.py:2229(type)
    75250    0.172    0.000    0.172    0.000 :0(issubclass)
    30439    0.156    0.000    1.531    0.000 session.py:280(__init__)
    62626    0.156    0.000    0.156    0.000 ops.py:2234(graph)
    61855    0.156    0.000    0.312    0.000 ops.py:346(graph)
    31880    0.156    0.000    0.234    0.000 ops.py:492(get_shape)
    31433    0.156    0.000    0.469    0.000 session_ops.py:255(_get_handle_feeder)
    59870    0.156    0.000    0.156    0.000 :0(move)
    30439    0.141    0.000    0.438    0.000 ops.py:4896(_session_run_lock)
    30523    0.141    0.000    0.969    0.000 lock_util.py:126(__exit__)
    30519    0.141    0.000    0.234    0.000 six.py:586(iteritems)
    62866    0.141    0.000    0.172    0.000 tensor_shape.py:566(ndims)
    30745    0.125    0.000    0.141    0.000 ops.py:5015(get_default)
    30580    0.125    0.000    0.562    0.000 context.py:671(graph_mode)
    91569    0.125    0.000    0.125    0.000 lock_util.py:110(_validate_group_id)
    30523    0.125    0.000    0.469    0.000 threading.py:357(notify_all)
    61978    0.125    0.000    0.125    0.000 :0(new_TF_Output)
    61978    0.125    0.000    0.641    0.000 pywrap_tensorflow_internal.py:1040(<lambda>)
    61858    0.125    0.000    0.125    0.000 ops.py:563(value_index)
    31433    0.125    0.000   17.453    0.001 numeric.py:469(asarray)
    31433    0.125    0.000    0.594    0.000 session_ops.py:275(_get_handle_mover)
   124739    0.109    0.000    0.109    0.000 session.py:746(graph)
    30720    0.109    0.000    0.109    0.000 ops.py:3187(building_function)
    30664    0.109    0.000    0.188    0.000 <string>:12(__new__)
    61160    0.109    0.000    0.109    0.000 context.py:343(_mode)
    30523    0.109    0.000    0.875    0.000 lock_util.py:123(__enter__)
    30523    0.109    0.000    0.219    0.000 :0(any)
    61046    0.109    0.000    0.109    0.000 lock_util.py:108(<genexpr>)
    60232    0.109    0.000    0.109    0.000 :0(TF_OperationOpType)
        1    0.094    0.094  113.328  113.328 train.py:12(learning)
    30745    0.094    0.000    0.234    0.000 ops.py:5202(get_default)
    30580    0.094    0.000    0.125    0.000 context.py:138(pop)
    30439    0.094    0.000    0.094    0.000 session.py:313(unique_fetches)
    91569    0.094    0.000    0.094    0.000 :0(acquire)
    30439    0.094    0.000    0.109    0.000 session.py:316(build_results)
    31453    0.094    0.000    2.578    0.000 tensor_shape.py:942(as_shape)
    31433    0.094    0.000    0.094    0.000 :0(IsSequence)
    29935    0.094    0.000    0.094    0.000 fromnumeric.py:70(<dictcomp>)
    29935    0.094    0.000    0.094    0.000 :0(is_finish)
    14979    0.094    0.000    0.109    0.000 tools.py:10(to_vector)
    31957    0.078    0.000    0.156    0.000 compat.py:42(as_bytes)
    30680    0.078    0.000    0.078    0.000 :0(__new__)
    30439    0.078    0.000    0.156    0.000 session.py:494(_assert_fetchable)
    30439    0.078    0.000    0.078    0.000 session.py:507(targets)
    61978    0.078    0.000    0.078    0.000 :0(TF_Output_oper_set)
    62150    0.078    0.000    0.078    0.000 pywrap_tensorflow_internal.py:1058(<lambda>)
    31880    0.078    0.000    0.078    0.000 ops.py:363(shape)
    30745    0.062    0.000    0.297    0.000 ops.py:5545(get_default_graph)
    30439    0.062    0.000    0.062    0.000 ops.py:2953(version)
    30439    0.062    0.000    0.078    0.000 ops.py:4758(is_fetchable)
    30523    0.062    0.000    0.094    0.000 threading.py:254(_is_owned)
    31449    0.062    0.000    0.062    0.000 dtypes.py:125(as_numpy_dtype)
    31433    0.062    0.000    0.062    0.000 session.py:128(<lambda>)
    62866    0.062    0.000    0.062    0.000 tensor_shape.py:556(dims)
    31885    0.047    0.000    0.047    0.000 :0(encode)
    61160    0.047    0.000    0.047    0.000 context.py:606(context_switches)
    61460    0.047    0.000    0.047    0.000 :0(pop)
    30439    0.047    0.000    0.047    0.000 session.py:1312(<listcomp>)
    32053    0.047    0.000    0.047    0.000 ops.py:341(dtype)
    62409    0.047    0.000    0.047    0.000 :0(iter)
    61978    0.047    0.000    0.047    0.000 :0(TF_Output_index_set)
    31433    0.047    0.000    0.141    0.000 pywrap_tensorflow_internal.py:2072(IsSequence)
        4    0.031    0.008    0.031    0.008 :0(TF_NewSessionRef)
    60878    0.031    0.000    0.031    0.000 session.py:127(<lambda>)
    30439    0.031    0.000    0.031    0.000 session.py:499(fetches)
    30523    0.031    0.000    0.031    0.000 lock_util.py:119(__init__)
    61046    0.031    0.000    0.031    0.000 :0(release)
      268    0.031    0.000    0.078    0.000 ops.py:1057(internal_convert_to_tensor)
       64    0.031    0.000    0.250    0.004 op_def_library.py:339(_apply_op_helper)
    30439    0.016    0.000    0.109    0.000 session.py:194(_is_attrs_instance)
      152    0.016    0.000    0.016    0.000 ops.py:3907(name_scope)
      419    0.016    0.000    0.016    0.000 tensor_shape.py:907(as_proto)
       84    0.016    0.000    0.016    0.000 inspect.py:1082(getfullargspec)
       84    0.016    0.000    0.094    0.001 ops.py:1657(__init__)
       84    0.016    0.000    0.031    0.000 ops.py:1589(_create_c_op)
      273    0.016    0.000    0.016    0.000 :0(SerializeToString)
       84    0.016    0.000    0.031    0.000 ops.py:2139(<listcomp>)
       84    0.016    0.000    0.031    0.000 ops.py:3340(_create_op_helper)
      236    0.016    0.000    0.016    0.000 ops.py:4782(_device_function_stack)
      964    0.016    0.000    0.016    0.000 ops.py:2102(outputs)
      104    0.016    0.000    0.016    0.000 ops.py:4104(colocate_with)
        8    0.016    0.002    0.016    0.002 ops.py:4975(control_dependencies)
        4    0.016    0.004    0.281    0.070 saver.py:383(_AddRestoreOps)
       17    0.016    0.001    0.016    0.001 device.py:132(parse_from_string)
       16    0.016    0.001    0.016    0.001 copy.py:66(copy)
      499    0.016    0.000    0.016    0.000 random.py:173(randrange)
    31433    0.016    0.000    0.250    0.000 ops.py:4750(is_feedable)
      499    0.016    0.000    0.016    0.000 :0(evaluate)
      499    0.016    0.000   32.250    0.065 network.py:71(learn_to)
    14979    0.016    0.000    0.016    0.000 :0(zeros)
      499    0.016    0.000   31.438    0.063 network.py:68(train)
       64    0.016    0.000    0.016    0.000 :0(replace)
        1    0.016    0.016    0.031    0.031 ops.py:3052(_as_graph_def)
        4    0.016    0.004    0.016    0.004 :0(MergeFrom)
        0    0.000             0.000          profile:0(profiler)
        1    0.000    0.000  113.328  113.328 profile:0(learning())
        1    0.000    0.000  113.328  113.328 :0(exec)
        1    0.000    0.000  113.328  113.328 <string>:1(<module>)
      503    0.000    0.000    0.000    0.000 :0(print)
        1    0.000    0.000    0.391    0.391 train.py:14(<listcomp>)
        4    0.000    0.000    0.531    0.133 network.py:59(__init__)
        4    0.000    0.000    0.031    0.008 session.py:1529(__init__)
        4    0.000    0.000    0.031    0.008 session.py:625(__init__)
       12    0.000    0.000    0.000    0.000 ops.py:5209(_GetGlobalDefaultGraph)
        8    0.000    0.000    0.000    0.000 :0(allocate_lock)
        4    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:1656(TF_NewSessionOptions)
        4    0.000    0.000    0.000    0.000 :0(_TF_NewSessionOptions)
        4    0.000    0.000    0.000    0.000 :0(_TF_SetTarget)
      494    0.000    0.000    0.000    0.000 ops.py:2947(_c_graph)
        4    0.000    0.000    0.000    0.000 :0(TF_DeleteSessionOptions)
        4    0.000    0.000    0.344    0.086 saver.py:968(__init__)
      301    0.000    0.000    0.000    0.000 context.py:655(executing_eagerly)
      397    0.000    0.000    0.000    0.000 context.py:364(executing_eagerly)
        4    0.000    0.000    0.344    0.086 saver.py:1111(build)
        4    0.000    0.000    0.344    0.086 saver.py:1120(_build)
        4    0.000    0.000    0.000    0.000 saver.py:163(__init__)
        4    0.000    0.000    0.344    0.086 saver.py:756(_build_internal)
        4    0.000    0.000    0.016    0.004 saver.py:656(_ValidateAndSliceInputs)
        4    0.000    0.000    0.000    0.000 saver.py:493(OpListToDict)
       62    0.000    0.000    0.000    0.000 :0(sorted)
       48    0.000    0.000    0.000    0.000 saver.py:517(<lambda>)
       96    0.000    0.000    0.000    0.000 variables.py:2278(name)
       48    0.000    0.000    0.000    0.000 variables.py:821(_TensorConversionFunction)
       48    0.000    0.000    0.000    0.000 variables.py:1592(_ref)
       96    0.000    0.000    0.000    0.000 saver.py:462(_IsVariable)
       48    0.000    0.000    0.000    0.000 saver.py:679(<lambda>)
       96    0.000    0.000    0.016    0.000 saver.py:578(SaveableObjectsForOp)
      204    0.000    0.000    0.000    0.000 ops.py:978(_TensorTensorConversionFunction)
       48    0.000    0.000    0.000    0.000 saver.py:107(__init__)
       48    0.000    0.000    0.000    0.000 saveable_object.py:24(__init__)
      216    0.000    0.000    0.000    0.000 :0(callable)
       48    0.000    0.000    0.000    0.000 saveable_object.py:54(__init__)
       48    0.000    0.000    0.000    0.000 saver.py:684(_AddSaveable)
      477    0.000    0.000    0.000    0.000 :0(add)
        4    0.000    0.000    0.000    0.000 saver.py:778(<listcomp>)
       76    0.000    0.000    0.000    0.000 ops.py:5968(__init__)
       76    0.000    0.000    0.016    0.000 ops.py:5982(__enter__)
      140    0.000    0.000    0.000    0.000 ops.py:5603(_get_graph_from_inputs)
      188    0.000    0.000    0.000    0.000 ops.py:5588(_assert_same_graph)
      465    0.000    0.000    0.000    0.000 compat.py:64(as_text)
      324    0.000    0.000    0.000    0.000 ops.py:3895(_name_stack)
      572    0.000    0.000    0.000    0.000 :0(hasattr)
      160    0.000    0.000    0.000    0.000 :0(match)
       88    0.000    0.000    0.000    0.000 ops.py:4022(unique_name)
      116    0.000    0.000    0.000    0.000 :0(lower)
      152    0.000    0.000    0.000    0.000 ops.py:3902(_name_stack)
       20    0.000    0.000    0.047    0.002 constant_op.py:117(constant)
       20    0.000    0.000    0.000    0.000 tensor_util.py:356(make_tensor_proto)
      208    0.000    0.000    0.000    0.000 dtypes.py:265(__eq__)
       20    0.000    0.000    0.000    0.000 tensor_util.py:345(_AssertCompatible)
       20    0.000    0.000    0.000    0.000 tensor_util.py:347(<listcomp>)
        4    0.000    0.000    0.000    0.000 tensor_util.py:317(_FilterNotTensor)
       36    0.000    0.000    0.000    0.000 tensor_util.py:253(_FirstNotNone)
    36/20    0.000    0.000    0.000    0.000 tensor_util.py:218(_GetDenseDimensions)
     1060    0.000    0.000    0.016    0.000 dtypes.py:661(as_dtype)
     1004    0.000    0.000    0.000    0.000 dtypes.py:130(as_datatype_enum)
      361    0.000    0.000    0.000    0.000 tensor_shape.py:913(<listcomp>)
       36    0.000    0.000    0.000    0.000 dtypes.py:293(__hash__)
       20    0.000    0.000    0.000    0.000 tensor_util.py:527(<listcomp>)
  600/216    0.000    0.000    0.000    0.000 tensor_util.py:228(_FlattenToStrings)
      623    0.000    0.000    0.000    0.000 :0(extend)
      216    0.000    0.000    0.000    0.000 :0(CopyFrom)
       84    0.000    0.000    0.141    0.002 deprecation.py:454(new_func)
       84    0.000    0.000    0.000    0.000 context.py:794(_tmp_in_graph_mode)
       84    0.000    0.000    0.016    0.000 tf_inspect.py:219(getcallargs)
       84    0.000    0.000    0.016    0.000 tf_inspect.py:199(getfullargspec)
      168    0.000    0.000    0.000    0.000 tf_decorator.py:104(unwrap)
       84    0.000    0.000    0.000    0.000 inspect.py:2176(_signature_from_callable)
      168    0.000    0.000    0.000    0.000 inspect.py:159(isfunction)
       84    0.000    0.000    0.000    0.000 inspect.py:2095(_signature_from_function)
      840    0.000    0.000    0.000    0.000 inspect.py:2434(__init__)
      840    0.000    0.000    0.000    0.000 :0(isidentifier)
       84    0.000    0.000    0.000    0.000 inspect.py:2713(__init__)
      924    0.000    0.000    0.000    0.000 inspect.py:2758(<genexpr>)
     1680    0.000    0.000    0.000    0.000 inspect.py:2483(name)
       84    0.000    0.000    0.000    0.000 inspect.py:2792(return_annotation)
       84    0.000    0.000    0.000    0.000 inspect.py:2788(parameters)
      148    0.000    0.000    0.000    0.000 :0(values)
      840    0.000    0.000    0.000    0.000 inspect.py:2495(kind)
     1344    0.000    0.000    0.000    0.000 inspect.py:2487(default)
      840    0.000    0.000    0.000    0.000 inspect.py:2491(annotation)
       84    0.000    0.000    0.000    0.000 tf_inspect.py:214(<genexpr>)
       84    0.000    0.000    0.000    0.000 :0(copy)
       84    0.000    0.000    0.000    0.000 tf_inspect.py:333(ismethod)
       84    0.000    0.000    0.000    0.000 inspect.py:81(ismethod)
       84    0.000    0.000    0.000    0.000 tf_inspect.py:240(<listcomp>)
      100    0.000    0.000    0.000    0.000 :0(update)
       84    0.000    0.000    0.125    0.001 ops.py:3193(create_op)
      252    0.000    0.000    0.000    0.000 ops.py:2912(_check_not_finalized)
       84    0.000    0.000    0.000    0.000 ops.py:1554(_NodeDef)
       84    0.000    0.000    0.000    0.000 ops.py:3261(<listcomp>)
       84    0.000    0.000    0.000    0.000 ops.py:4400(_control_dependencies_for_inputs)
      200    0.000    0.000    0.000    0.000 ops.py:4858(_control_dependencies_stack)
       84    0.000    0.000    0.000    0.000 ops.py:4889(_mutation_lock)
      168    0.000    0.000    0.000    0.000 :0(ByteSize)
       20    0.000    0.000    0.000    0.000 ops.py:1740(<listcomp>)
       84    0.000    0.000    0.000    0.000 ops.py:3684(_next_id)
      144    0.000    0.000    0.000    0.000 tf_stack.py:31(extract_stack)
      180    0.000    0.000    0.000    0.000 :0(exc_info)
     3380    0.000    0.000    0.000    0.000 tf_stack.py:53(<lambda>)
      144    0.000    0.000    0.000    0.000 :0(reverse)
       84    0.000    0.000    0.000    0.000 ops.py:3022(_get_control_flow_context)
       20    0.000    0.000    0.000    0.000 ops.py:3695(_get_op_def)
      450    0.000    0.000    0.000    0.000 c_api_util.py:141(tf_buffer)
      225    0.000    0.000    0.000    0.000 :0(TF_NewBuffer)
      277    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:894(<lambda>)
       20    0.000    0.000    0.000    0.000 :0(TF_GraphGetOpDef)
      189    0.000    0.000    0.000    0.000 :0(TF_GetBuffer)
      277    0.000    0.000    0.000    0.000 :0(TF_DeleteBuffer)
      189    0.000    0.000    0.000    0.000 :0(ParseFromString)
      277    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:918(<lambda>)
       84    0.000    0.000    0.000    0.000 ops.py:1820(_reconstruct_sequence_inputs)
       84    0.000    0.000    0.000    0.000 :0(TF_NewOperation)
       84    0.000    0.000    0.000    0.000 _collections_abc.py:676(items)
       84    0.000    0.000    0.000    0.000 _collections_abc.py:698(__init__)
      280    0.000    0.000    0.000    0.000 _collections_abc.py:742(__iter__)
      196    0.000    0.000    0.000    0.000 :0(TF_SetAttrValueProto)
       84    0.000    0.000    0.000    0.000 :0(TF_FinishOperation)
       84    0.000    0.000    0.000    0.000 :0(TF_OperationNumOutputs)
       84    0.000    0.000    0.000    0.000 ops.py:1797(<listcomp>)
      120    0.000    0.000    0.000    0.000 :0(TF_OperationOutputType)
       84    0.000    0.000    0.000    0.000 ops.py:1800(<listcomp>)
      120    0.000    0.000    0.000    0.000 ops.py:304(__init__)
      120    0.000    0.000    0.000    0.000 ops.py:204(uid)
      120    0.000    0.000    0.000    0.000 :0(TFE_Py_UID)
       84    0.000    0.000    0.000    0.000 ops.py:2921(_add_op)
      252    0.000    0.000    0.000    0.000 ops.py:1901(_id)
       84    0.000    0.000    0.000    0.000 :0(max)
       84    0.000    0.000    0.047    0.001 ops.py:1809(_control_flow_post_processing)
      140    0.000    0.000    0.047    0.000 ops.py:2132(inputs)
       84    0.000    0.000    0.016    0.000 :0(GetOperationInputs)
       84    0.000    0.000    0.000    0.000 ops.py:2112(__init__)
       84    0.000    0.000    0.000    0.000 ops.py:2115(__iter__)
       84    0.000    0.000    0.000    0.000 ops.py:4434(_record_op_seen_by_control_dependencies)
       84    0.000    0.000    0.016    0.000 ops.py:4251(_apply_device_functions)
      136    0.000    0.000    0.000    0.000 traceable_stack.py:112(peek_objs)
      136    0.000    0.000    0.000    0.000 traceable_stack.py:114(<listcomp>)
       84    0.000    0.000    0.000    0.000 ops.py:4803(_snapshot_device_function_stack_metadata)
      168    0.000    0.000    0.000    0.000 traceable_stack.py:116(peek_traceable_objs)
       84    0.000    0.000    0.000    0.000 ops.py:4844(_snapshot_colocation_stack_metadata)
      324    0.000    0.000    0.000    0.000 ops.py:4829(_colocation_stack)
       84    0.000    0.000    0.000    0.000 ops.py:4847(<dictcomp>)
       84    0.000    0.000    0.000    0.000 traceable_stack.py:120(__len__)
        4    0.000    0.000    0.031    0.008 saver.py:274(_AddSaveOps)
        4    0.000    0.000    0.031    0.008 saver.py:166(save_op)
       48    0.000    0.000    0.000    0.000 saveable_object.py:46(tensor)
        4    0.000    0.000    0.031    0.008 gen_io_ops.py:1773(save_v2)
       64    0.000    0.000    0.000    0.000 op_def_library.py:83(_Flatten)
       64    0.000    0.000    0.000    0.000 op_def_library.py:86(<listcomp>)
      240    0.000    0.000    0.000    0.000 op_def_library.py:79(_IsListValue)
       64    0.000    0.000    0.000    0.000 op_def_library.py:88(<listcomp>)
      128    0.000    0.000    0.000    0.000 op_def_library.py:63(_IsListParameter)
      300    0.000    0.000    0.016    0.000 dtypes.py:242(is_compatible_with)
      716    0.000    0.000    0.000    0.000 dtypes.py:102(base_dtype)
      864    0.000    0.000    0.000    0.000 dtypes.py:89(_is_ref_dtype)
      128    0.000    0.000    0.000    0.000 op_def_library.py:550(<listcomp>)
       88    0.000    0.000    0.000    0.000 dtypes.py:275(__ne__)
       16    0.000    0.000    0.000    0.000 array_ops.py:958(_autopacking_conversion_function)
       16    0.000    0.000    0.000    0.000 array_ops.py:928(_get_dtype_from_nested_lists)
      192    0.000    0.000    0.000    0.000 ops.py:156(is_dense_tensor_like)
       16    0.000    0.000    0.031    0.002 constant_op.py:226(_constant_tensor_conversion_function)
       16    0.000    0.000    0.000    0.000 dtypes.py:121(is_numpy_compatible)
   208/16    0.000    0.000    0.000    0.000 tensor_util.py:302(_FilterStr)
       16    0.000    0.000    0.000    0.000 tensor_util.py:304(<listcomp>)
       33    0.000    0.000    0.000    0.000 _internal.py:879(npy_ctypes_check)
        4    0.000    0.000    0.000    0.000 ops.py:1167(internal_convert_n_to_tensor)
        4    0.000    0.000    0.000    0.000 op_def_library.py:487(<listcomp>)
      100    0.000    0.000    0.000    0.000 op_def_library.py:37(_Attr)
      248    0.000    0.000    0.000    0.000 op_def_library.py:52(_SatisfiesTypeConstraint)
     1268    0.000    0.000    0.000    0.000 :0(HasField)
      225    0.000    0.000    0.000    0.000 :0(startswith)
        8    0.000    0.000    0.000    0.000 :0(SetInParent)
        8    0.000    0.000    0.000    0.000 op_def_library.py:723(<listcomp>)
      148    0.000    0.000    0.000    0.000 op_def_library.py:172(_MakeType)
       64    0.000    0.000    0.000    0.000 op_def_library.py:781(<listcomp>)
  224/128    0.000    0.000    0.016    0.000 op_def_library.py:248(_MaybeColocateWith)
       72    0.000    0.000    0.000    0.000 ops.py:2732(_name_from_scope_name)
      160    0.000    0.000    0.000    0.000 :0(all)
      236    0.000    0.000    0.000    0.000 ops.py:1743(<genexpr>)
      124    0.000    0.000    0.000    0.000 :0(TF_AddInput)
        4    0.000    0.000    0.000    0.000 ops.py:1611(<listcomp>)
        4    0.000    0.000    0.000    0.000 :0(TF_AddInputList)
      172    0.000    0.000    0.016    0.000 ops.py:3668(_get_tensor_by_tf_output)
      172    0.000    0.000    0.000    0.000 ops.py:3643(_get_operation_by_tf_operation)
      172    0.000    0.000    0.000    0.000 ops.py:3620(_get_operation_by_name_unsafe)
      172    0.000    0.000    0.000    0.000 control_flow_util.py:225(CheckInputFromValidContext)
      344    0.000    0.000    0.000    0.000 ops.py:1880(_get_control_flow_context)
      172    0.000    0.000    0.000    0.000 control_flow_util.py:139(GetOutputContext)
       76    0.000    0.000    0.000    0.000 ops.py:6033(__exit__)
        4    0.000    0.000    0.000    0.000 control_flow_ops.py:3340(with_dependencies)
       52    0.000    0.000    0.000    0.000 ops.py:4970(colocate_with)
       52    0.000    0.000    0.000    0.000 ops.py:4952(_colocate_with_for_gradient)
      104    0.000    0.000    0.016    0.000 ops.py:4091(_colocate_with_for_gradient)
       60    0.000    0.000    0.000    0.000 ops.py:1272(internal_convert_to_tensor_or_indexed_slices)
       52    0.000    0.000    0.000    0.000 traceable_stack.py:80(__init__)
      104    0.000    0.000    0.000    0.000 ops.py:4820(_device_function_stack)
       60    0.000    0.000    0.000    0.000 traceable_stack.py:89(push_obj)
      128    0.000    0.000    0.000    0.000 traceable_stack.py:30(__init__)
       60    0.000    0.000    0.000    0.000 traceable_stack.py:35(set_filename_and_line_from_caller)
        8    0.000    0.000    0.000    0.000 ops.py:4443(control_dependencies)
        8    0.000    0.000    0.000    0.000 ops.py:4393(_current_control_dependencies)
        8    0.000    0.000    0.000    0.000 ops.py:4323(__init__)
        8    0.000    0.000    0.000    0.000 ops.py:4358(__enter__)
        8    0.000    0.000    0.000    0.000 ops.py:4386(_push_control_dependencies_controller)
        4    0.000    0.000    0.000    0.000 ops.py:1247(convert_to_tensor_or_indexed_slices)
        4    0.000    0.000    0.000    0.000 control_flow_ops.py:173(_Identity)
        4    0.000    0.000    0.000    0.000 array_ops.py:59(identity)
        4    0.000    0.000    0.000    0.000 gen_array_ops.py:4090(identity)
       56    0.000    0.000    0.000    0.000 op_def_library.py:45(_AttrValue)
        4    0.000    0.000    0.000    0.000 ops.py:4383(op_in_group)
        8    0.000    0.000    0.000    0.000 ops.py:4376(control_inputs)
        8    0.000    0.000    0.000    0.000 ops.py:4431(<listcomp>)
       52    0.000    0.000    0.000    0.000 :0(TF_AddControlInput)
        8    0.000    0.000    0.000    0.000 ops.py:4380(add_op)
       68    0.000    0.000    0.000    0.000 traceable_stack.py:72(copy_metadata)
       52    0.000    0.000    0.000    0.000 ops.py:1855(colocation_groups)
      204    0.000    0.000    0.000    0.000 ops.py:2308(get_attr)
      204    0.000    0.000    0.000    0.000 :0(TF_OperationGetAttrValueProto)
       36    0.000    0.000    0.000    0.000 errors_impl.py:242(__init__)
       36    0.000    0.000    0.000    0.000 errors_impl.py:42(__init__)
       36    0.000    0.000    0.000    0.000 :0(throw)
       36    0.000    0.000    0.000    0.000 errors_impl.py:95(__str__)
       36    0.000    0.000    0.000    0.000 errors_impl.py:64(message)
      164    0.000    0.000    0.000    0.000 ops.py:1906(device)
      164    0.000    0.000    0.000    0.000 :0(TF_OperationDevice)
       52    0.000    0.000    0.000    0.000 ops.py:2297(_set_attr)
       52    0.000    0.000    0.000    0.000 :0(TF_NewBufferFromString)
       52    0.000    0.000    0.000    0.000 :0(SetAttr)
      168    0.000    0.000    0.000    0.000 :0(WhichOneof)
       56    0.000    0.000    0.000    0.000 backprop.py:123(_record_gradient)
       56    0.000    0.000    0.000    0.000 :0(TFE_Py_RecordGradient)
        8    0.000    0.000    0.000    0.000 ops.py:4368(__exit__)
        8    0.000    0.000    0.000    0.000 ops.py:4389(_pop_control_dependencies_controller)
       60    0.000    0.000    0.000    0.000 traceable_stack.py:108(pop_obj)
        4    0.000    0.000    0.078    0.020 saver.py:849(bulk_restore)
        8    0.000    0.000    0.000    0.000 ops.py:4908(device)
       16    0.000    0.000    0.031    0.002 ops.py:4187(device)
        8    0.000    0.000    0.016    0.002 ops.py:4180(_add_device_to_stack)
        8    0.000    0.000    0.016    0.002 ops.py:82(__init__)
        8    0.000    0.000    0.016    0.002 device.py:274(merge_device)
       17    0.000    0.000    0.016    0.001 device.py:217(from_string)
       17    0.000    0.000    0.000    0.000 device.py:68(__init__)
       17    0.000    0.000    0.000    0.000 device.py:103(job)
       17    0.000    0.000    0.000    0.000 device.py:114(replica)
       17    0.000    0.000    0.000    0.000 device.py:125(task)
       43    0.000    0.000    0.000    0.000 device.py:196(to_string)
       59    0.000    0.000    0.000    0.000 device.py:99(job)
       59    0.000    0.000    0.000    0.000 device.py:110(replica)
       59    0.000    0.000    0.000    0.000 device.py:121(task)
       17    0.000    0.000    0.000    0.000 :0(hash)
       17    0.000    0.000    0.000    0.000 device.py:92(_clear)
       48    0.000    0.000    0.000    0.000 :0(split)
       17    0.000    0.000    0.000    0.000 device.py:150(<listcomp>)
       35    0.000    0.000    0.000    0.000 :0(upper)
        9    0.000    0.000    0.000    0.000 device.py:237(__hash__)
        5    0.000    0.000    0.000    0.000 device.py:234(__eq__)
        4    0.000    0.000    0.047    0.012 gen_io_ops.py:1493(restore_v2)
        4    0.000    0.000    0.000    0.000 gen_io_ops.py:1546(<listcomp>)
       48    0.000    0.000    0.000    0.000 execute.py:121(make_type)
       16    0.000    0.000    0.016    0.001 device.py:313(_device_function)
       16    0.000    0.000    0.000    0.000 :0(__reduce_ex__)
       16    0.000    0.000    0.000    0.000 copy.py:268(_reconstruct)
       16    0.000    0.000    0.000    0.000 copyreg.py:87(__newobj__)
       16    0.000    0.000    0.000    0.000 device.py:179(merge_from)
       16    0.000    0.000    0.000    0.000 ops.py:2021(_set_device)
       16    0.000    0.000    0.000    0.000 ops.py:1547(_device_string)
       16    0.000    0.000    0.000    0.000 :0(SetRequestedDevice)
        4    0.000    0.000    0.000    0.000 ops.py:2338(<listcomp>)
       48    0.000    0.000    0.156    0.003 saver.py:111(restore)
       48    0.000    0.000    0.000    0.000 tensor_shape.py:880(is_fully_defined)
      152    0.000    0.000    0.000    0.000 tensor_shape.py:882(<genexpr>)
       48    0.000    0.000    0.156    0.003 state_ops.py:192(assign)
       48    0.000    0.000    0.156    0.003 gen_state_ops.py:27(assign)
       96    0.000    0.000    0.000    0.000 execute.py:114(make_bool)
       96    0.000    0.000    0.000    0.000 op_def_library.py:638(<genexpr>)
       96    0.000    0.000    0.000    0.000 op_def_library.py:165(_MakeBool)
       48    0.000    0.000    0.000    0.000 op_def_library.py:772(<listcomp>)
       48    0.000    0.000    0.000    0.000 dtypes.py:94(_as_ref)
       16    0.000    0.000    0.000    0.000 ops.py:1868(<listcomp>)
        4    0.000    0.000    0.031    0.008 control_flow_ops.py:3388(group)
        4    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:2124(Flatten)
        4    0.000    0.000    0.000    0.000 :0(Flatten)
       96    0.000    0.000    0.000    0.000 ops.py:358(device)
        4    0.000    0.000    0.031    0.008 control_flow_ops.py:3378(_GroupControlDeps)
        4    0.000    0.000    0.016    0.004 gen_control_flow_ops.py:498(no_op)
        5    0.000    0.000    0.000    0.000 ops.py:3853(get_all_collection_keys)
        5    0.000    0.000    0.000    0.000 ops.py:3856(<listcomp>)
       21    0.000    0.000    0.000    0.000 ops.py:3817(get_collection)
        8    0.000    0.000    0.000    0.000 saver.py:1170(_check_saver_def)
        5    0.000    0.000    0.000    0.000 :0(time)
      499    0.000    0.000    0.000    0.000 random.py:253(choice)
      998    0.000    0.000    0.000    0.000 random.py:223(_randbelow)
      998    0.000    0.000    0.000    0.000 :0(bit_length)
     1643    0.000    0.000    0.000    0.000 :0(getrandbits)
      499    0.000    0.000    0.016    0.000 random.py:217(randint)
      499    0.000    0.000    0.000    0.000 tools.py:16(porn)
      501    0.000    0.000    0.000    0.000 :0(count)
        1    0.000    0.000    0.109    0.109 network.py:96(save)
        1    0.000    0.000    0.109    0.109 saver.py:1343(save)
        5    0.000    0.000    0.000    0.000 ntpath.py:199(split)
       82    0.000    0.000    0.000    0.000 :0(fspath)
        8    0.000    0.000    0.000    0.000 ntpath.py:33(_get_bothseps)
       26    0.000    0.000    0.000    0.000 ntpath.py:121(splitdrive)
        5    0.000    0.000    0.000    0.000 :0(rstrip)
        2    0.000    0.000    0.000    0.000 ntpath.py:233(basename)
        2    0.000    0.000    0.000    0.000 ntpath.py:240(dirname)
      317    0.000    0.000    0.000    0.000 ops.py:434(_c_api_shape)
      317    0.000    0.000    0.000    0.000 :0(TF_GraphGetTensorShapeHelper)
      269    0.000    0.000    0.000    0.000 ops.py:442(<listcomp>)
        1    0.000    0.000    0.000    0.000 :0(decode)
        1    0.000    0.000    0.000    0.000 saver.py:1194(_RecordLastCheckpoint)
        1    0.000    0.000    0.000    0.000 saver.py:1288(last_checkpoints)
        2    0.000    0.000    0.000    0.000 saver.py:1297(<genexpr>)
        1    0.000    0.000    0.000    0.000 saver.py:1182(_CheckpointFilename)
        1    0.000    0.000    0.016    0.016 checkpoint_management.py:166(update_checkpoint_state_internal)
        1    0.000    0.000    0.000    0.000 checkpoint_management.py:42(_GetCheckpointFilename)
        4    0.000    0.000    0.000    0.000 ntpath.py:74(join)
        1    0.000    0.000    0.016    0.016 checkpoint_management.py:58(generate_checkpoint_state_proto)
        3    0.000    0.000    0.000    0.000 ntpath.py:66(isabs)
        2    0.000    0.000    0.016    0.008 ntpath.py:559(relpath)
        8    0.000    0.000    0.000    0.000 ntpath.py:471(normpath)
       11    0.000    0.000    0.000    0.000 :0(join)
        4    0.000    0.000    0.000    0.000 ntpath.py:538(abspath)
        4    0.000    0.000    0.000    0.000 :0(_getfullpathname)
        4    0.000    0.000    0.000    0.000 :0(lstrip)
       28    0.000    0.000    0.016    0.001 ntpath.py:43(normcase)
        2    0.000    0.000    0.000    0.000 ntpath.py:587(<listcomp>)
        2    0.000    0.000    0.000    0.000 ntpath.py:588(<listcomp>)
        1    0.000    0.000    0.000    0.000 text_format.py:121(MessageToString)
        1    0.000    0.000    0.000    0.000 text_format.py:102(__init__)
        1    0.000    0.000    0.000    0.000 text_format.py:256(__init__)
        1    0.000    0.000    0.000    0.000 text_format.py:328(PrintMessage)
        1    0.000    0.000    0.000    0.000 :0(ListFields)
        2    0.000    0.000    0.000    0.000 text_format.py:173(_IsMapEntry)
        2    0.000    0.000    0.000    0.000 text_format.py:359(PrintField)
       14    0.000    0.000    0.000    0.000 text_format.py:108(write)
       14    0.000    0.000    0.000    0.000 :0(write)
        2    0.000    0.000    0.000    0.000 text_format.py:411(PrintFieldValue)
        2    0.000    0.000    0.000    0.000 text_encoding.py:59(CEscape)
       24    0.000    0.000    0.000    0.000 text_encoding.py:79(<genexpr>)
       22    0.000    0.000    0.000    0.000 text_encoding.py:76(<lambda>)
        1    0.000    0.000    0.000    0.000 text_format.py:117(getvalue)
        1    0.000    0.000    0.000    0.000 :0(getvalue)
        1    0.000    0.000    0.000    0.000 text_format.py:114(close)
        1    0.000    0.000    0.000    0.000 :0(close)
        2    0.000    0.000    0.000    0.000 file_io.py:418(atomic_write_string_to_file)
        2    0.000    0.000    0.000    0.000 uuid.py:614(uuid4)
        2    0.000    0.000    0.000    0.000 :0(urandom)
        2    0.000    0.000    0.000    0.000 uuid.py:106(__init__)
        2    0.000    0.000    0.000    0.000 :0(from_bytes)
        2    0.000    0.000    0.000    0.000 uuid.py:280(hex)
        2    0.000    0.000    0.000    0.000 file_io.py:303(write_string_to_file)
        2    0.000    0.000    0.000    0.000 file_io.py:55(__init__)
        2    0.000    0.000    0.000    0.000 file_io.py:202(__enter__)
        2    0.000    0.000    0.000    0.000 file_io.py:106(write)
        2    0.000    0.000    0.000    0.000 file_io.py:87(_prewrite_check)
        9    0.000    0.000    0.000    0.000 errors_impl.py:518(__enter__)
        9    0.000    0.000    0.000    0.000 c_api_util.py:32(__init__)
        9    0.000    0.000    0.000    0.000 :0(TF_NewStatus)
        2    0.000    0.000    0.000    0.000 :0(CreateWritableFile)
        2    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:1874(<lambda>)
        9    0.000    0.000    0.000    0.000 errors_impl.py:522(__exit__)
        9    0.000    0.000    0.000    0.000 :0(TF_GetCode)
        9    0.000    0.000    0.000    0.000 c_api_util.py:35(__del__)
        9    0.000    0.000    0.000    0.000 :0(TF_DeleteStatus)
        2    0.000    0.000    0.000    0.000 :0(AppendToFile)
        2    0.000    0.000    0.000    0.000 file_io.py:206(__exit__)
        2    0.000    0.000    0.000    0.000 file_io.py:234(close)
        2    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:1884(Close)
        2    0.000    0.000    0.000    0.000 :0(WritableFile_Close)
        2    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:614(<lambda>)
        2    0.000    0.000    0.000    0.000 :0(Set_TF_Status_from_Status)
        2    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:1882(<lambda>)
        2    0.000    0.000    0.000    0.000 pywrap_tensorflow_internal.py:653(<lambda>)
        2    0.000    0.000    0.000    0.000 file_io.py:400(rename)
        2    0.000    0.000    0.000    0.000 :0(RenameFile)
        1    0.000    0.000    0.000    0.000 saver.py:1209(_MaybeDeleteOldCheckpoints)
        1    0.000    0.000    0.000    0.000 checkpoint_management.py:442(meta_graph_filename)
        1    0.000    0.000    0.000    0.000 re.py:184(sub)
        1    0.000    0.000    0.000    0.000 re.py:286(_compile)
        2    0.000    0.000    0.000    0.000 sre_compile.py:539(isstring)
        1    0.000    0.000    0.000    0.000 sre_compile.py:557(compile)
        1    0.000    0.000    0.000    0.000 sre_parse.py:844(parse)
        1    0.000    0.000    0.000    0.000 sre_parse.py:223(__init__)
       14    0.000    0.000    0.000    0.000 sre_parse.py:232(__next)
        1    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
        1    0.000    0.000    0.000    0.000 sre_parse.py:407(_parse_sub)
        4    0.000    0.000    0.000    0.000 sre_parse.py:285(tell)
        1    0.000    0.000    0.000    0.000 sre_parse.py:470(_parse)
        3    0.000    0.000    0.000    0.000 sre_parse.py:111(__init__)
       13    0.000    0.000    0.000    0.000 sre_parse.py:253(get)
        6    0.000    0.000    0.000    0.000 :0(ord)
        8    0.000    0.000    0.000    0.000 sre_parse.py:171(append)
        6    0.000    0.000    0.000    0.000 sre_parse.py:248(match)
        2    0.000    0.000    0.000    0.000 sre_parse.py:294(_class_escape)
        6    0.000    0.000    0.000    0.000 sre_parse.py:159(__len__)
       12    0.000    0.000    0.000    0.000 sre_parse.py:163(__getitem__)
        2    0.000    0.000    0.000    0.000 sre_parse.py:167(__setitem__)
        1    0.000    0.000    0.000    0.000 sre_parse.py:342(_escape)
        1    0.000    0.000    0.000    0.000 sre_parse.py:828(fix_flags)
        1    0.000    0.000    0.000    0.000 sre_compile.py:542(_code)
        1    0.000    0.000    0.000    0.000 sre_compile.py:482(_compile_info)
      5/3    0.000    0.000    0.000    0.000 sre_parse.py:173(getwidth)
        7    0.000    0.000    0.000    0.000 :0(min)
        1    0.000    0.000    0.000    0.000 sre_compile.py:414(_get_literal_prefix)
        1    0.000    0.000    0.000    0.000 sre_compile.py:393(_generate_overlap_table)
      3/1    0.000    0.000    0.000    0.000 sre_compile.py:64(_compile)
        2    0.000    0.000    0.000    0.000 sre_compile.py:388(_simple)
        2    0.000    0.000    0.000    0.000 sre_compile.py:223(_compile_charset)
        2    0.000    0.000    0.000    0.000 sre_compile.py:250(_optimize_charset)
        4    0.000    0.000    0.000    0.000 :0(find)
        2    0.000    0.000    0.000    0.000 sre_parse.py:81(groups)
        1    0.000    0.000    0.000    0.000 :0(compile)
        2    0.000    0.000    0.000    0.000 enum.py:801(__and__)
        4    0.000    0.000    0.000    0.000 enum.py:265(__call__)
        4    0.000    0.000    0.000    0.000 enum.py:515(__new__)
        1    0.000    0.000    0.000    0.000 :0(sub)
        1    0.000    0.000    0.062    0.062 saver.py:1473(export_meta_graph)
        1    0.000    0.000    0.031    0.031 ops.py:3098(as_graph_def)
        1    0.000    0.000    0.000    0.000 :0(TF_GraphToGraphDef)
        1    0.000    0.000    0.000    0.000 :0(ClearField)
      345    0.000    0.000    0.016    0.000 ops.py:3095(<listcomp>)
       48    0.000    0.000    0.000    0.000 tensor_shape.py:950(unknown_shape)
        1    0.000    0.000    0.031    0.031 saver.py:1727(export_meta_graph)
        1    0.000    0.000    0.031    0.031 meta_graph.py:874(export_scoped_meta_graph)
       37    0.000    0.000    0.000    0.000 meta_graph.py:345(_should_include_node)
      109    0.000    0.000    0.000    0.000 ops.py:6042(strip_name_scope)
        1    0.000    0.000    0.016    0.016 meta_graph.py:512(create_meta_graph_def)
        1    0.000    0.000    0.000    0.000 meta_graph.py:171(stripped_op_list_for_graph)
        1    0.000    0.000    0.000    0.000 meta_graph.py:135(ops_used_by_graph_def)
      369    0.000    0.000    0.000    0.000 meta_graph.py:156(mark_op_as_used)
        1    0.000    0.000    0.000    0.000 meta_graph.py:168(<listcomp>)
        1    0.000    0.000    0.000    0.000 op_def_registry.py:40(get_registered_ops)
        1    0.000    0.000    0.000    0.000 meta_graph.py:205(<listcomp>)
        4    0.000    0.000    0.000    0.000 meta_graph.py:377(add_collection_def)
        4    0.000    0.000    0.000    0.000 meta_graph.py:409(<listcomp>)
        3    0.000    0.000    0.000    0.000 ops.py:6148(get_to_proto_function)
        6    0.000    0.000    0.000    0.000 registry.py:78(lookup)
        3    0.000    0.000    0.000    0.000 ops.py:6140(get_collection_proto_type)
       24    0.000    0.000    0.000    0.000 resource_variable_ops.py:1465(_to_proto_fn)
       24    0.000    0.000    0.000    0.000 variables.py:2333(to_proto)
       24    0.000    0.000    0.000    0.000 variables.py:1617(trainable)
       24    0.000    0.000    0.000    0.000 variables.py:2295(initializer)
        1    0.000    0.000    0.000    0.000 meta_graph.py:209(_get_kind_name)
        1    0.000    0.000    0.016    0.016 graph_io.py:30(write_graph)
        1    0.000    0.000    0.000    0.000 file_io.py:244(file_exists)
        1    0.000    0.000    0.000    0.000 :0(FileExists)
        3    0.000    0.000    0.000    0.000 session.py:730(__del__)
        3    0.000    0.000    0.000    0.000 session.py:717(close)
        3    0.000    0.000    0.000    0.000 :0(TF_CloseSession)
        3    0.000    0.000    0.000    0.000 :0(TF_DeleteSession)
        1    0.000    0.000    0.000    0.000 :0(setprofile)